#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  //pipelineTriggers([cron('H 05 * * *')])
])

@Library("Infrastructure")

def type = "java"
def product = "pcq"
def component = "backend"

withPipeline(type, product, component) {

  installCharts()
  enableSlackNotifications('#pcq-builds')
  disableLegacyDeployment()

  env.TEST_URL = "http://pcq-backend-aat.service.core-compute-aat.internal"

  after('test') {

    junit 'build/test-results/test/**/*.xml'
    archiveArtifacts 'build/reports/tests/test/index.html'

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/test",
      reportFiles          : "index.html",
      reportName           : "pcq-backend Test Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/jacoco",
      reportFiles          : "index.html",
      reportName           : "pcq-backend Code Coverage Report"
    ]

  }

  after('functionalTest:aat') {
    publishHTML target: [
      reportDir            : "target/site/serenity/",
      reportFiles          : "index.html",
      reportName           : "AAT Functional Tests",
      alwaysLinkToLastBuild: true
    ]

    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }

  after('functionalTest:preview') {
    publishHTML target: [
      reportDir            : "target/site/serenity/",
      reportFiles          : "index.html",
      reportName           : "Preview Functional Tests",
      alwaysLinkToLastBuild: true
    ]

    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }

}
